// <auto-generated />
using System;
using HotelManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManagement.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelManagement.Context.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookedTill")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CheckedIn")
                        .HasColumnType("bit");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookedFrom = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookedTill = new DateTime(2025, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckedIn = false,
                            GuestId = 1,
                            Paid = true,
                            RoomId = 1,
                            TotalCost = 1197.0
                        },
                        new
                        {
                            BookingId = 2,
                            BookedFrom = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookedTill = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckedIn = true,
                            GuestId = 2,
                            Paid = true,
                            RoomId = 2,
                            TotalCost = 6291.0
                        },
                        new
                        {
                            BookingId = 3,
                            BookedFrom = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookedTill = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckedIn = false,
                            GuestId = 3,
                            Paid = false,
                            RoomId = 3,
                            TotalCost = 4193.0
                        },
                        new
                        {
                            BookingId = 4,
                            BookedFrom = new DateTime(2025, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookedTill = new DateTime(2025, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckedIn = true,
                            GuestId = 4,
                            Paid = true,
                            RoomId = 1,
                            TotalCost = 5985.0
                        });
                });

            modelBuilder.Entity("HotelManagement.Context.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            Country = "England",
                            Email = "ironmaiden@email.com",
                            FirstName = "Iron",
                            LastName = "Maiden",
                            Phone = "0044-12345678"
                        },
                        new
                        {
                            GuestId = 2,
                            Country = "USA",
                            Email = "sixfeetunder@email.com",
                            FirstName = "Sixfeet",
                            LastName = "Under",
                            Phone = "001-12345678"
                        },
                        new
                        {
                            GuestId = 3,
                            Country = "Finland",
                            Email = "insomnium@email.com",
                            FirstName = "Insomnium",
                            LastName = "NA",
                            Phone = "00358-123456"
                        },
                        new
                        {
                            GuestId = 4,
                            Country = "Sweden",
                            Email = "opeth@email.com",
                            FirstName = "Opeth",
                            LastName = "NA",
                            Phone = "0046-123456"
                        });
                });

            modelBuilder.Entity("HotelManagement.Context.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            BookingId = 1,
                            PaymentDate = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card"
                        },
                        new
                        {
                            PaymentId = 2,
                            BookingId = 2,
                            PaymentDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "PayPal"
                        },
                        new
                        {
                            PaymentId = 3,
                            BookingId = 3
                        },
                        new
                        {
                            PaymentId = 4,
                            BookingId = 4,
                            PaymentDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Credit Card"
                        });
                });

            modelBuilder.Entity("HotelManagement.Context.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<bool>("ExtraBeds")
                        .HasColumnType("bit");

                    b.Property<double>("PricePerNight")
                        .HasColumnType("float");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Availability = true,
                            ExtraBeds = false,
                            PricePerNight = 399.0,
                            RoomType = "Single"
                        },
                        new
                        {
                            RoomId = 2,
                            Availability = false,
                            ExtraBeds = true,
                            PricePerNight = 699.0,
                            RoomType = "Double"
                        },
                        new
                        {
                            RoomId = 3,
                            Availability = true,
                            ExtraBeds = false,
                            PricePerNight = 599.0,
                            RoomType = "Double"
                        },
                        new
                        {
                            RoomId = 4,
                            Availability = false,
                            ExtraBeds = false,
                            PricePerNight = 399.0,
                            RoomType = "Single"
                        });
                });

            modelBuilder.Entity("HotelManagement.Context.Booking", b =>
                {
                    b.HasOne("HotelManagement.Context.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagement.Context.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelManagement.Context.Payment", b =>
                {
                    b.HasOne("HotelManagement.Context.Booking", "Booking")
                        .WithOne("Payment")
                        .HasForeignKey("HotelManagement.Context.Payment", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelManagement.Context.Booking", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("HotelManagement.Context.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelManagement.Context.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
